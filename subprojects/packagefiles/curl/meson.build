project('libcurl', 'c', version: '8.15.0', license: 'bsd')

src = [
  'lib/curlx/base64.c',
  'lib/curlx/dynbuf.c',
  'lib/curlx/inet_ntop.c',
  'lib/curlx/inet_pton.c',
  'lib/curlx/multibyte.c',
  'lib/curlx/nonblock.c',
  'lib/curlx/strparse.c',
  'lib/curlx/timediff.c',
  'lib/curlx/timeval.c',
  'lib/curlx/version_win32.c',
  'lib/curlx/wait.c',
  'lib/curlx/warnless.c',
  'lib/curlx/winapi.c',

  'lib/vauth/cleartext.c',
  'lib/vauth/cram.c',
  'lib/vauth/digest.c',
  'lib/vauth/digest_sspi.c',
  'lib/vauth/gsasl.c',
  'lib/vauth/krb5_gssapi.c',
  'lib/vauth/krb5_sspi.c',
  'lib/vauth/ntlm.c',
  'lib/vauth/ntlm_sspi.c',
  'lib/vauth/oauth2.c',
  'lib/vauth/spnego_gssapi.c',
  'lib/vauth/spnego_sspi.c',
  'lib/vauth/vauth.c',

  'lib/vtls/gtls.c',
  'lib/vtls/hostcheck.c',
  'lib/vtls/keylog.c',
  'lib/vtls/mbedtls.c',
  'lib/vtls/mbedtls_threadlock.c',
  'lib/vtls/openssl.c',
  'lib/vtls/rustls.c',
  'lib/vtls/schannel.c',
  'lib/vtls/schannel_verify.c',
  'lib/vtls/vtls.c',
  'lib/vtls/vtls_scache.c',
  'lib/vtls/vtls_spack.c',
  'lib/vtls/wolfssl.c',
  'lib/vtls/x509asn1.c',

  'lib/vquic/curl_msh3.c',
  'lib/vquic/curl_ngtcp2.c',
  'lib/vquic/curl_osslq.c',
  'lib/vquic/curl_quiche.c',
  'lib/vquic/vquic.c',
  'lib/vquic/vquic-tls.c',

  'lib/vssh/libssh.c',
  'lib/vssh/libssh2.c',
  'lib/vssh/curl_path.c',
  'lib/vssh/wolfssh.c',

  'lib/altsvc.c',
  'lib/amigaos.c',
  'lib/asyn-ares.c',
  'lib/asyn-base.c',
  'lib/asyn-thrdd.c',
  'lib/bufq.c',
  'lib/bufref.c',
  'lib/cf-h1-proxy.c',
  'lib/cf-h2-proxy.c',
  'lib/cf-haproxy.c',
  'lib/cf-https-connect.c',
  'lib/cf-socket.c',
  'lib/cfilters.c',
  'lib/conncache.c',
  'lib/connect.c',
  'lib/content_encoding.c',
  'lib/cookie.c',
  'lib/cshutdn.c',
  'lib/curl_addrinfo.c',
  'lib/curl_des.c',
  'lib/curl_endian.c',
  'lib/curl_fnmatch.c',
  'lib/curl_get_line.c',
  'lib/curl_gethostname.c',
  'lib/curl_gssapi.c',
  'lib/curl_memrchr.c',
  'lib/curl_ntlm_core.c',
  'lib/curl_range.c',
  'lib/curl_rtmp.c',
  'lib/curl_sasl.c',
  'lib/curl_sha512_256.c',
  'lib/curl_sspi.c',
  'lib/curl_threads.c',
  'lib/curl_trc.c',
  'lib/cw-out.c',
  'lib/cw-pause.c',
  'lib/dict.c',
  'lib/dllmain.c',
  'lib/doh.c',
  'lib/dynhds.c',
  'lib/easy.c',
  'lib/easygetopt.c',
  'lib/easyoptions.c',
  'lib/escape.c',
  'lib/fake_addrinfo.c',
  'lib/file.c',
  'lib/fileinfo.c',
  'lib/fopen.c',
  'lib/formdata.c',
  'lib/ftp.c',
  'lib/ftplistparser.c',
  'lib/getenv.c',
  'lib/getinfo.c',
  'lib/gopher.c',
  'lib/hash.c',
  'lib/headers.c',
  'lib/hmac.c',
  'lib/hostip.c',
  'lib/hostip4.c',
  'lib/hostip6.c',
  'lib/hsts.c',
  'lib/http.c',
  'lib/http1.c',
  'lib/http2.c',
  'lib/http_aws_sigv4.c',
  'lib/http_chunks.c',
  'lib/http_digest.c',
  'lib/http_negotiate.c',
  'lib/http_ntlm.c',
  'lib/http_proxy.c',
  'lib/httpsrr.c',
  'lib/idn.c',
  'lib/if2ip.c',
  'lib/imap.c',
  'lib/krb5.c',
  'lib/ldap.c',
  'lib/llist.c',
  'lib/macos.c',
  'lib/md4.c',
  'lib/md5.c',
  'lib/memdebug.c',
  'lib/mime.c',
  'lib/mprintf.c',
  'lib/mqtt.c',
  'lib/multi.c',
  'lib/multi_ev.c',
  'lib/netrc.c',
  'lib/noproxy.c',
  'lib/openldap.c',
  'lib/parsedate.c',
  'lib/pingpong.c',
  'lib/pop3.c',
  'lib/progress.c',
  'lib/psl.c',
  'lib/rand.c',
  'lib/rename.c',
  'lib/request.c',
  'lib/rtsp.c',
  'lib/select.c',
  'lib/sendf.c',
  'lib/setopt.c',
  'lib/sha256.c',
  'lib/share.c',
  'lib/slist.c',
  'lib/smb.c',
  'lib/smtp.c',
  'lib/socketpair.c',
  'lib/socks.c',
  'lib/socks_gssapi.c',
  'lib/socks_sspi.c',
  'lib/speedcheck.c',
  'lib/splay.c',
  'lib/strcase.c',
  'lib/strdup.c',
  'lib/strequal.c',
  'lib/strerror.c',
  'lib/system_win32.c',
  'lib/telnet.c',
  'lib/tftp.c',
  'lib/transfer.c',
  'lib/uint-bset.c',
  'lib/uint-hash.c',
  'lib/uint-spbset.c',
  'lib/uint-table.c',
  'lib/url.c',
  'lib/urlapi.c',
  'lib/version.c',
  'lib/ws.c',
]

if host_machine.system() != 'windows'
  error('Only Windows supported')
endif

cc = meson.get_compiler('c')

args = [
  '-DBUILDING_LIBCURL',
  '-DUSE_SCHANNEL',
  '-DUSE_WINDOWS_SSPI',
  '-DUSE_IPV6',
  '-DCURL_STATICLIB',
  '-DHTTP_ONLY',
  '-DCURL_DISABLE_CRYPTO_AUTH',
]

if get_option('windows-xp-compat')
  args += '-D_WIN32_WINNT=0x0501'
else
  args += '-D_WIN32_WINNT=0x0601'
endif

zlib = dependency('zlib', required: false)
if zlib.found()
  args += '-DHAVE_LIBZ'
endif

deps = [
  cc.find_library('advapi32'),
  cc.find_library('bcrypt'),
  cc.find_library('crypt32'),
  cc.find_library('secur32'),
  cc.find_library('ws2_32'),
  zlib,
]

nghttp2 = dependency('libnghttp2', required: false)
if nghttp2.found() and cc.has_header_symbol('sspi.h', 'SecApplicationProtocolNegotiationExt_ALPN',
                                            prefix: '#include <windows.h>', args: ['-DSECURITY_WIN32=1'])
  args += ['-DUSE_NGHTTP2', '-DHAS_ALPN=1']
  deps += nghttp2
endif

libcurl = static_library('curl', src,
  c_args:              args,
  dependencies:        deps,
  include_directories: ['include', 'lib'],
)

libcurl_dep = declare_dependency(
  compile_args:        ['-DCURL_STATICLIB'],
  dependencies:        deps,
  include_directories: 'include',
  link_with:           libcurl,
)
